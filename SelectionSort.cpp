#include <iostream> // Подключаем библиотеку ввода-вывода

// Функция swap для обмена двух значений местами
void swap(int& a, int& b) {
    int temp = a;   // Сохраняем значение первого элемента временно
    a = b;          // Присваиваем первому элементу значение второго
    b = temp;       // Возвращаем второму элементу исходное значение первого
}

// Основная функция сортировки выбором
void selectionSort(int arr[], int n) {
    for (int i = 0; i < n - 1; ++i) {      // Проходим по массиву от начала до предпоследнего элемента
        int minIndex = i;                  // Предполагаем, что минимальный элемент находится здесь

        // Ищем настоящий минимальный элемент справа от текущего положения
        for (int j = i + 1; j < n; ++j) {
            if (arr[j] < arr[minIndex]) {  // Если нашли меньший элемент...
                minIndex = j;              // Запоминаем индекс нового минимума
            }
        }

        // Меняем найденный минимум с текущим элементом
        if (minIndex != i) {               // Проверяем, нужен ли обмен
            swap(arr[i], arr[minIndex]);   // Обмен элементами
        }
    }
}

// Вспомогательная функция вывода массива на экран
void printArray(const int arr[], int size) {
    std::cout << "Отсортированный массив:\n";
    for (int i = 0; i < size; ++i) {
        std::cout << arr[i] << ' ';
    }
    std::cout << '\n';
}

// Главная функция программы
int main() {
    const int SIZE = 8;                     // Размер тестового массива
    int array[] = {64, 25, 12, 22, 11, 90, 5, 3}; // Тестовый массив

    selectionSort(array, SIZE);             // Сортируем массив
    printArray(array, SIZE);                // Печать отсортированного массива

    return 0;                               // Завершаем программу успешно
}
